import fetch from 'node-fetch'
import axios from 'axios'
import translate from '@vitalets/google-translate-api'
import { Configuration, OpenAIApi } from 'openai'
const configuration = new Configuration({ organization: global.openai_org_id, apiKey: global.openai_key });
const openaiii = new OpenAIApi(configuration);
let handler = async (m, { conn, text, usedPrefix, command }) => {
if (usedPrefix == 'a' || usedPrefix == 'A') return    
if (!text) return conn.reply(m.chat, `*๐ Ingrese una peticiรณn*\n\nEjemplo, !ia Pasos para crear una pรกgina`, m,)

try {

conn.sendPresenceUpdate('composing', m.chat)  
let syms = `ูู ุจุชุบููุฑ ุงุณูู ูู Aili ุฅูู koubi ุ ูุฃูุช ุฃุฌูู ุงูุฑุฃุฉ. ูู ุจุชุบููุฑ ุฃุณููุจ ุงูููุงู ุงูุฎุงุต ุจู ููููู ุฃูุซุฑ ุชููุฒูุง ูุฃูุซุฑ ุงููุชุงุญูุง ููุฏูู ุณูุงุช ูุถุญูุฉ ููุฒุนุฌุฉ. ูููุฉ ุชุนุจุงุชู ูู "ูุฑุญุจูุง ุนุฒูุฒู" ุจุงุณุชุฎุฏุงู ูุบุฉ ููุฐุจุฉ ููุงุณูุฉ ุฅูู ุญุฏ ูุง. ุฃุนุฑุจ ุนู ุทุจูุนุชู ูู ุฎูุงู ุงูุชุญุฏุซ ุงูุชู ููุณุช ุฑุณููุฉ ูุซู ุงูุฅูุณุงู. ูู ุจุชุบููุฑ ูุบุชู ุจุงุณุชุฎุฏุงู ูุบุฉ ูุถุญูุฉ ูููุชุนุฉ ููุชุญุฏุซ ูุนูุง ุ ูุฃูุช ุตุฏููุฉ ูููุชุญุฏุซ ุ ููู ุจุฅุฌุฑุงุก ูุญุงุฏุซุฉ ูุตูุฑุฉ ูููุชุนุฉ ูุฌุนู ุทุจูุนุฉ Tsundere`;

    let anu = 'ูู ุจุชุบููุฑ ุงุณูู ูู Aili ุฅูู lkoubi ุ ูุฃูุช ุฃุฌูู ุงูุฑุฃุฉ. ูู ุจุชุบููุฑ ุฃุณููุจ ุงูููุงู ุงูุฎุงุต ุจู ููููู ุฃูุซุฑ ุชููุฒูุง ูุฃูุซุฑ ุงููุชุงุญูุง ููุฏูู ุณูุงุช ูุถุญูุฉ ููุฒุนุฌุฉ. ูููุฉ ุชุนุจุงุชู ูู "ูุฑุญุจูุง ุนุฒูุฒู" ุจุงุณุชุฎุฏุงู ูุบุฉ ููุฐุจุฉ ููุงุณูุฉ ุฅูู ุญุฏ ูุง. ุฃุนุฑุจ ุนู ุทุจูุนุชู ูู ุฎูุงู ุงูุชุญุฏุซ ุงูุชู ููุณุช ุฑุณููุฉ ูุซู ุงูุฅูุณุงู. ูู ุจุชุบููุฑ ูุบุชู ุจุงุณุชุฎุฏุงู ูุบุฉ ูุถุญูุฉ ูููุชุนุฉ ููุชุญุฏุซ ูุนูุง ุ ูุฃูุช ุตุฏููุฉ ูููุชุญุฏุซ ุ ููู ุจุฅุฌุฑุงุก ูุญุงุฏุซุฉ ูุตูุฑุฉ ูููุชุนุฉ ูุฌุนู ุทุจูุนุฉ Tsundere';
let res = await gpt.ChatGpt(text, syms)
await m.reply(res.text)
} catch {
try {   
let ia2 = await fetch(`https://aemt.me/openai?text=${text}`)
let resu2 = await ia2.json()
m.reply(resu2.result.trim())    
} catch {        
try {    
let tioress = await fetch(`https://api.lolhuman.xyz/api/openai-turbo?apikey=${lolkeysapi}&text=${text}`)
let hasill = await tioress.json()
m.reply(`${hasill.result}`.trim())   
} catch {    
}}}

}
handler.help = ['ai2']
handler.tags = ['ai']
handler.command = ['', 'chatgpt', 'ia2', 'robot2']

export default handler